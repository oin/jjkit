#include "ext/doctest.h"
#include "jjmath.hpp"

TEST_SUITE_BEGIN("jjmath");

TEST_CASE("jj1efilter") {
	jj1efilter f;
	f.fcmin = 1.f;
	f.beta = 0.1f;

	constexpr const size_t size = 100;
	const float raw[size] = { -0.0385099, -0.0280664, 0.048622, 0.111498, 0.053026, 0.120548, 0.00972308, 0.074193, -0.0236801, 0.0462396, 0.0892027, 0.158329, 0.0423086, 0.0887203, 0.039102, 0.140277, 0.156938, 0.0961089, 0.216881, 0.067538, 0.0737634, 0.0989231, 0.148209, 0.0959887, 0.225627, 0.292078, 0.185221, 0.133595, 0.216387, 0.316189, 0.156782, 0.164811, 0.167903, 0.273214, 0.305514, 0.342528, 0.334796, 0.210729, 0.401551, 0.267666, 0.365411, 0.429558, 0.400613, 0.377235, 0.290475, 0.3709, 0.343945, 0.409876, 0.449394, 0.408817, 0.460212, 0.350016, 0.460729, 0.460575, 0.422736, 0.494404, 0.370493, 0.458812, 0.437653, 0.540203, 0.562047, 0.499726, 0.45569, 0.488606, 0.414257, 0.547406, 0.48588, 0.506342, 0.523481, 0.517879, 0.509856, 0.460493, 0.653243, 0.474117, 0.655405, 0.565535, 0.610696, 0.602161, 0.613684, 0.636438, 0.526166, 0.552988, 0.659328, 0.537982, 0.646424, 0.723758, 0.753106, 0.618995, 0.593751, 0.682406, 0.648052, 0.601187, 0.656204, 0.655082, 0.737839, 0.790659, 0.723829, 0.714996, 0.695523, 0.70248 };
	const float groundtruth[size] = { -0.0385099, -0.0379872, -0.0334427, -0.0252696, -0.0207099, -0.0119912, -0.0106507, -0.00526521, -0.00641239, -0.00308863, 0.00291027, 0.0135545, 0.01552, 0.0206024, 0.0218784, 0.030313, 0.0396331, 0.0438101, 0.0572083, 0.057997, 0.0591871, 0.0621793, 0.0687489, 0.0708137, 0.0829925, 0.100305, 0.107391, 0.109553, 0.118501, 0.135759, 0.137568, 0.139884, 0.142239, 0.153484, 0.166876, 0.182828, 0.196929, 0.198186, 0.217377, 0.222081, 0.235717, 0.254702, 0.269202, 0.279981, 0.281006, 0.289789, 0.295032, 0.306231, 0.320391, 0.32913, 0.342217, 0.342979, 0.354566, 0.36504, 0.370691, 0.382917, 0.381722, 0.389119, 0.39373, 0.407881, 0.423039, 0.430553, 0.432974, 0.43829, 0.436061, 0.446481, 0.450126, 0.455294, 0.461545, 0.466679, 0.470578, 0.469689, 0.486396, 0.485307, 0.500834, 0.50672, 0.516254, 0.524151, 0.532408, 0.542071, 0.540633, 0.54173, 0.552312, 0.551056, 0.559483, 0.574396, 0.591094, 0.593663, 0.593671, 0.601697, 0.605855, 0.605446, 0.609871, 0.613785, 0.624707, 0.639729, 0.647362, 0.653486, 0.657257, 0.66128 };

	const float rate = 120.f; // Hz
	const uint32_t dt = 1000.f / rate; // ms
	uint32_t t = 0;
	for(size_t i=0; i<size; ++i) {
		const float x = raw[i];
		const float y = f.process(x, t);
		t += dt;

		CHECK_MESSAGE(y == doctest::Approx(groundtruth[i]).epsilon(0.01), "i = " << i);
	}
}

TEST_SUITE_END();
